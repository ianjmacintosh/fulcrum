/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ResumesRouteImport } from './routes/resumes'
import { Route as JobBoardsRouteImport } from './routes/job-boards'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ApplicationsRouteImport } from './routes/applications'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminLogoutRouteImport } from './routes/admin/logout'
import { ServerRoute as ApiAdminUsersServerRouteImport } from './routes/api/admin/users'
import { ServerRoute as ApiAdminLogoutServerRouteImport } from './routes/api/admin/logout'
import { ServerRoute as ApiAdminLoginServerRouteImport } from './routes/api/admin/login'
import { ServerRoute as ApiAdminUsersCreateServerRouteImport } from './routes/api/admin/users/create'
import { ServerRoute as ApiAdminUsersChar91idChar93DeleteServerRouteImport } from './routes/api/admin/users/[id]/delete'

const rootServerRouteImport = createServerRootRoute()

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ResumesRoute = ResumesRouteImport.update({
  id: '/resumes',
  path: '/resumes',
  getParentRoute: () => rootRouteImport,
} as any)
const JobBoardsRoute = JobBoardsRouteImport.update({
  id: '/job-boards',
  path: '/job-boards',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicationsRoute = ApplicationsRouteImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLogoutRoute = AdminLogoutRouteImport.update({
  id: '/admin/logout',
  path: '/admin/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAdminUsersServerRoute = ApiAdminUsersServerRouteImport.update({
  id: '/api/admin/users',
  path: '/api/admin/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminLogoutServerRoute = ApiAdminLogoutServerRouteImport.update({
  id: '/api/admin/logout',
  path: '/api/admin/logout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminLoginServerRoute = ApiAdminLoginServerRouteImport.update({
  id: '/api/admin/login',
  path: '/api/admin/login',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminUsersCreateServerRoute =
  ApiAdminUsersCreateServerRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => ApiAdminUsersServerRoute,
  } as any)
const ApiAdminUsersChar91idChar93DeleteServerRoute =
  ApiAdminUsersChar91idChar93DeleteServerRouteImport.update({
    id: '/[id]/delete',
    path: '/[id]/delete',
    getParentRoute: () => ApiAdminUsersServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin': typeof AdminIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin': typeof AdminIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/applications': typeof ApplicationsRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/admin/': typeof AdminIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/applications'
    | '/dashboard'
    | '/job-boards'
    | '/resumes'
    | '/settings'
    | '/admin/logout'
    | '/admin/users'
    | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/applications'
    | '/dashboard'
    | '/job-boards'
    | '/resumes'
    | '/settings'
    | '/admin/logout'
    | '/admin/users'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/applications'
    | '/dashboard'
    | '/job-boards'
    | '/resumes'
    | '/settings'
    | '/admin/logout'
    | '/admin/users'
    | '/admin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApplicationsRoute: typeof ApplicationsRoute
  DashboardRoute: typeof DashboardRoute
  JobBoardsRoute: typeof JobBoardsRoute
  ResumesRoute: typeof ResumesRoute
  SettingsRoute: typeof SettingsRoute
  AdminLogoutRoute: typeof AdminLogoutRoute
  AdminUsersRoute: typeof AdminUsersRoute
  AdminIndexRoute: typeof AdminIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/[id]/delete': typeof ApiAdminUsersChar91idChar93DeleteServerRoute
}
export interface FileServerRoutesByTo {
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/[id]/delete': typeof ApiAdminUsersChar91idChar93DeleteServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/[id]/delete': typeof ApiAdminUsersChar91idChar93DeleteServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/admin/users/create'
    | '/api/admin/users/[id]/delete'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/admin/users/create'
    | '/api/admin/users/[id]/delete'
  id:
    | '__root__'
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/admin/users/create'
    | '/api/admin/users/[id]/delete'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAdminLoginServerRoute: typeof ApiAdminLoginServerRoute
  ApiAdminLogoutServerRoute: typeof ApiAdminLogoutServerRoute
  ApiAdminUsersServerRoute: typeof ApiAdminUsersServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resumes': {
      id: '/resumes'
      path: '/resumes'
      fullPath: '/resumes'
      preLoaderRoute: typeof ResumesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-boards': {
      id: '/job-boards'
      path: '/job-boards'
      fullPath: '/job-boards'
      preLoaderRoute: typeof JobBoardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applications': {
      id: '/applications'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof ApplicationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/logout': {
      id: '/admin/logout'
      path: '/admin/logout'
      fullPath: '/admin/logout'
      preLoaderRoute: typeof AdminLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/admin/users': {
      id: '/api/admin/users'
      path: '/api/admin/users'
      fullPath: '/api/admin/users'
      preLoaderRoute: typeof ApiAdminUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/logout': {
      id: '/api/admin/logout'
      path: '/api/admin/logout'
      fullPath: '/api/admin/logout'
      preLoaderRoute: typeof ApiAdminLogoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/login': {
      id: '/api/admin/login'
      path: '/api/admin/login'
      fullPath: '/api/admin/login'
      preLoaderRoute: typeof ApiAdminLoginServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/users/create': {
      id: '/api/admin/users/create'
      path: '/create'
      fullPath: '/api/admin/users/create'
      preLoaderRoute: typeof ApiAdminUsersCreateServerRouteImport
      parentRoute: typeof ApiAdminUsersServerRoute
    }
    '/api/admin/users/[id]/delete': {
      id: '/api/admin/users/[id]/delete'
      path: '/[id]/delete'
      fullPath: '/api/admin/users/[id]/delete'
      preLoaderRoute: typeof ApiAdminUsersChar91idChar93DeleteServerRouteImport
      parentRoute: typeof ApiAdminUsersServerRoute
    }
  }
}

interface ApiAdminUsersServerRouteChildren {
  ApiAdminUsersCreateServerRoute: typeof ApiAdminUsersCreateServerRoute
  ApiAdminUsersChar91idChar93DeleteServerRoute: typeof ApiAdminUsersChar91idChar93DeleteServerRoute
}

const ApiAdminUsersServerRouteChildren: ApiAdminUsersServerRouteChildren = {
  ApiAdminUsersCreateServerRoute: ApiAdminUsersCreateServerRoute,
  ApiAdminUsersChar91idChar93DeleteServerRoute:
    ApiAdminUsersChar91idChar93DeleteServerRoute,
}

const ApiAdminUsersServerRouteWithChildren =
  ApiAdminUsersServerRoute._addFileChildren(ApiAdminUsersServerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApplicationsRoute: ApplicationsRoute,
  DashboardRoute: DashboardRoute,
  JobBoardsRoute: JobBoardsRoute,
  ResumesRoute: ResumesRoute,
  SettingsRoute: SettingsRoute,
  AdminLogoutRoute: AdminLogoutRoute,
  AdminUsersRoute: AdminUsersRoute,
  AdminIndexRoute: AdminIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAdminLoginServerRoute: ApiAdminLoginServerRoute,
  ApiAdminLogoutServerRoute: ApiAdminLogoutServerRoute,
  ApiAdminUsersServerRoute: ApiAdminUsersServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
