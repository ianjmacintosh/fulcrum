/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ResumesRouteImport } from './routes/resumes'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as JobBoardsRouteImport } from './routes/job-boards'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApplicationsIndexRouteImport } from './routes/applications/index'
import { Route as ApplicationsNewRouteImport } from './routes/applications/new'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminLogoutRouteImport } from './routes/admin/logout'
import { Route as AdminChangePasswordRouteImport } from './routes/admin/change-password'
import { ServerRoute as ApiJobBoardsIndexServerRouteImport } from './routes/api/job-boards/index'
import { ServerRoute as ApiAuthStatusServerRouteImport } from './routes/api/auth/status'
import { ServerRoute as ApiAuthLogoutServerRouteImport } from './routes/api/auth/logout'
import { ServerRoute as ApiAuthLoginServerRouteImport } from './routes/api/auth/login'
import { ServerRoute as ApiApplicationsCreateServerRouteImport } from './routes/api/applications/create'
import { ServerRoute as ApiAnalyticsProjectionServerRouteImport } from './routes/api/analytics/projection'
import { ServerRoute as ApiAnalyticsDashboardServerRouteImport } from './routes/api/analytics/dashboard'
import { ServerRoute as ApiAdminUsersServerRouteImport } from './routes/api/admin/users'
import { ServerRoute as ApiAdminLogoutServerRouteImport } from './routes/api/admin/logout'
import { ServerRoute as ApiAdminLoginServerRouteImport } from './routes/api/admin/login'
import { ServerRoute as ApiAdminChangePasswordServerRouteImport } from './routes/api/admin/change-password'
import { ServerRoute as ApiAdminUsersCreateServerRouteImport } from './routes/api/admin/users/create'
import { ServerRoute as ApiAdminUsersIdServerRouteImport } from './routes/api/admin/users/$id'
import { ServerRoute as ApiAdminUsersIdResetServerRouteImport } from './routes/api/admin/users/$id/reset'
import { ServerRoute as ApiAdminUsersIdDataSummaryServerRouteImport } from './routes/api/admin/users/$id/data-summary'

const rootServerRouteImport = createServerRootRoute()

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ResumesRoute = ResumesRouteImport.update({
  id: '/resumes',
  path: '/resumes',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const JobBoardsRoute = JobBoardsRouteImport.update({
  id: '/job-boards',
  path: '/job-boards',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicationsIndexRoute = ApplicationsIndexRouteImport.update({
  id: '/applications/',
  path: '/applications/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApplicationsNewRoute = ApplicationsNewRouteImport.update({
  id: '/applications/new',
  path: '/applications/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminLogoutRoute = AdminLogoutRouteImport.update({
  id: '/admin/logout',
  path: '/admin/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminChangePasswordRoute = AdminChangePasswordRouteImport.update({
  id: '/admin/change-password',
  path: '/admin/change-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiJobBoardsIndexServerRoute = ApiJobBoardsIndexServerRouteImport.update({
  id: '/api/job-boards/',
  path: '/api/job-boards/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthStatusServerRoute = ApiAuthStatusServerRouteImport.update({
  id: '/api/auth/status',
  path: '/api/auth/status',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthLogoutServerRoute = ApiAuthLogoutServerRouteImport.update({
  id: '/api/auth/logout',
  path: '/api/auth/logout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthLoginServerRoute = ApiAuthLoginServerRouteImport.update({
  id: '/api/auth/login',
  path: '/api/auth/login',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiApplicationsCreateServerRoute =
  ApiApplicationsCreateServerRouteImport.update({
    id: '/api/applications/create',
    path: '/api/applications/create',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAnalyticsProjectionServerRoute =
  ApiAnalyticsProjectionServerRouteImport.update({
    id: '/api/analytics/projection',
    path: '/api/analytics/projection',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAnalyticsDashboardServerRoute =
  ApiAnalyticsDashboardServerRouteImport.update({
    id: '/api/analytics/dashboard',
    path: '/api/analytics/dashboard',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAdminUsersServerRoute = ApiAdminUsersServerRouteImport.update({
  id: '/api/admin/users',
  path: '/api/admin/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminLogoutServerRoute = ApiAdminLogoutServerRouteImport.update({
  id: '/api/admin/logout',
  path: '/api/admin/logout',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminLoginServerRoute = ApiAdminLoginServerRouteImport.update({
  id: '/api/admin/login',
  path: '/api/admin/login',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAdminChangePasswordServerRoute =
  ApiAdminChangePasswordServerRouteImport.update({
    id: '/api/admin/change-password',
    path: '/api/admin/change-password',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAdminUsersCreateServerRoute =
  ApiAdminUsersCreateServerRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => ApiAdminUsersServerRoute,
  } as any)
const ApiAdminUsersIdServerRoute = ApiAdminUsersIdServerRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiAdminUsersServerRoute,
} as any)
const ApiAdminUsersIdResetServerRoute =
  ApiAdminUsersIdResetServerRouteImport.update({
    id: '/reset',
    path: '/reset',
    getParentRoute: () => ApiAdminUsersIdServerRoute,
  } as any)
const ApiAdminUsersIdDataSummaryServerRoute =
  ApiAdminUsersIdDataSummaryServerRouteImport.update({
    id: '/data-summary',
    path: '/data-summary',
    getParentRoute: () => ApiAdminUsersIdServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/change-password': typeof AdminChangePasswordRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/applications/new': typeof ApplicationsNewRoute
  '/applications': typeof ApplicationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/change-password': typeof AdminChangePasswordRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/applications/new': typeof ApplicationsNewRoute
  '/applications': typeof ApplicationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/job-boards': typeof JobBoardsRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/reset-password': typeof ResetPasswordRoute
  '/resumes': typeof ResumesRoute
  '/settings': typeof SettingsRoute
  '/admin/change-password': typeof AdminChangePasswordRoute
  '/admin/logout': typeof AdminLogoutRoute
  '/admin/users': typeof AdminUsersRoute
  '/applications/new': typeof ApplicationsNewRoute
  '/applications/': typeof ApplicationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/job-boards'
    | '/login'
    | '/logout'
    | '/reset-password'
    | '/resumes'
    | '/settings'
    | '/admin/change-password'
    | '/admin/logout'
    | '/admin/users'
    | '/applications/new'
    | '/applications'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/job-boards'
    | '/login'
    | '/logout'
    | '/reset-password'
    | '/resumes'
    | '/settings'
    | '/admin/change-password'
    | '/admin/logout'
    | '/admin/users'
    | '/applications/new'
    | '/applications'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/job-boards'
    | '/login'
    | '/logout'
    | '/reset-password'
    | '/resumes'
    | '/settings'
    | '/admin/change-password'
    | '/admin/logout'
    | '/admin/users'
    | '/applications/new'
    | '/applications/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  JobBoardsRoute: typeof JobBoardsRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  ResumesRoute: typeof ResumesRoute
  SettingsRoute: typeof SettingsRoute
  AdminChangePasswordRoute: typeof AdminChangePasswordRoute
  AdminLogoutRoute: typeof AdminLogoutRoute
  AdminUsersRoute: typeof AdminUsersRoute
  ApplicationsNewRoute: typeof ApplicationsNewRoute
  ApplicationsIndexRoute: typeof ApplicationsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/admin/change-password': typeof ApiAdminChangePasswordServerRoute
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/analytics/dashboard': typeof ApiAnalyticsDashboardServerRoute
  '/api/analytics/projection': typeof ApiAnalyticsProjectionServerRoute
  '/api/applications/create': typeof ApiApplicationsCreateServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
  '/api/auth/status': typeof ApiAuthStatusServerRoute
  '/api/job-boards': typeof ApiJobBoardsIndexServerRoute
  '/api/admin/users/$id': typeof ApiAdminUsersIdServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/$id/data-summary': typeof ApiAdminUsersIdDataSummaryServerRoute
  '/api/admin/users/$id/reset': typeof ApiAdminUsersIdResetServerRoute
}
export interface FileServerRoutesByTo {
  '/api/admin/change-password': typeof ApiAdminChangePasswordServerRoute
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/analytics/dashboard': typeof ApiAnalyticsDashboardServerRoute
  '/api/analytics/projection': typeof ApiAnalyticsProjectionServerRoute
  '/api/applications/create': typeof ApiApplicationsCreateServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
  '/api/auth/status': typeof ApiAuthStatusServerRoute
  '/api/job-boards': typeof ApiJobBoardsIndexServerRoute
  '/api/admin/users/$id': typeof ApiAdminUsersIdServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/$id/data-summary': typeof ApiAdminUsersIdDataSummaryServerRoute
  '/api/admin/users/$id/reset': typeof ApiAdminUsersIdResetServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/admin/change-password': typeof ApiAdminChangePasswordServerRoute
  '/api/admin/login': typeof ApiAdminLoginServerRoute
  '/api/admin/logout': typeof ApiAdminLogoutServerRoute
  '/api/admin/users': typeof ApiAdminUsersServerRouteWithChildren
  '/api/analytics/dashboard': typeof ApiAnalyticsDashboardServerRoute
  '/api/analytics/projection': typeof ApiAnalyticsProjectionServerRoute
  '/api/applications/create': typeof ApiApplicationsCreateServerRoute
  '/api/auth/login': typeof ApiAuthLoginServerRoute
  '/api/auth/logout': typeof ApiAuthLogoutServerRoute
  '/api/auth/status': typeof ApiAuthStatusServerRoute
  '/api/job-boards/': typeof ApiJobBoardsIndexServerRoute
  '/api/admin/users/$id': typeof ApiAdminUsersIdServerRouteWithChildren
  '/api/admin/users/create': typeof ApiAdminUsersCreateServerRoute
  '/api/admin/users/$id/data-summary': typeof ApiAdminUsersIdDataSummaryServerRoute
  '/api/admin/users/$id/reset': typeof ApiAdminUsersIdResetServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/admin/change-password'
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/analytics/dashboard'
    | '/api/analytics/projection'
    | '/api/applications/create'
    | '/api/auth/login'
    | '/api/auth/logout'
    | '/api/auth/status'
    | '/api/job-boards'
    | '/api/admin/users/$id'
    | '/api/admin/users/create'
    | '/api/admin/users/$id/data-summary'
    | '/api/admin/users/$id/reset'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/admin/change-password'
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/analytics/dashboard'
    | '/api/analytics/projection'
    | '/api/applications/create'
    | '/api/auth/login'
    | '/api/auth/logout'
    | '/api/auth/status'
    | '/api/job-boards'
    | '/api/admin/users/$id'
    | '/api/admin/users/create'
    | '/api/admin/users/$id/data-summary'
    | '/api/admin/users/$id/reset'
  id:
    | '__root__'
    | '/api/admin/change-password'
    | '/api/admin/login'
    | '/api/admin/logout'
    | '/api/admin/users'
    | '/api/analytics/dashboard'
    | '/api/analytics/projection'
    | '/api/applications/create'
    | '/api/auth/login'
    | '/api/auth/logout'
    | '/api/auth/status'
    | '/api/job-boards/'
    | '/api/admin/users/$id'
    | '/api/admin/users/create'
    | '/api/admin/users/$id/data-summary'
    | '/api/admin/users/$id/reset'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAdminChangePasswordServerRoute: typeof ApiAdminChangePasswordServerRoute
  ApiAdminLoginServerRoute: typeof ApiAdminLoginServerRoute
  ApiAdminLogoutServerRoute: typeof ApiAdminLogoutServerRoute
  ApiAdminUsersServerRoute: typeof ApiAdminUsersServerRouteWithChildren
  ApiAnalyticsDashboardServerRoute: typeof ApiAnalyticsDashboardServerRoute
  ApiAnalyticsProjectionServerRoute: typeof ApiAnalyticsProjectionServerRoute
  ApiApplicationsCreateServerRoute: typeof ApiApplicationsCreateServerRoute
  ApiAuthLoginServerRoute: typeof ApiAuthLoginServerRoute
  ApiAuthLogoutServerRoute: typeof ApiAuthLogoutServerRoute
  ApiAuthStatusServerRoute: typeof ApiAuthStatusServerRoute
  ApiJobBoardsIndexServerRoute: typeof ApiJobBoardsIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resumes': {
      id: '/resumes'
      path: '/resumes'
      fullPath: '/resumes'
      preLoaderRoute: typeof ResumesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/job-boards': {
      id: '/job-boards'
      path: '/job-boards'
      fullPath: '/job-boards'
      preLoaderRoute: typeof JobBoardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applications/': {
      id: '/applications/'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof ApplicationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/applications/new': {
      id: '/applications/new'
      path: '/applications/new'
      fullPath: '/applications/new'
      preLoaderRoute: typeof ApplicationsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/logout': {
      id: '/admin/logout'
      path: '/admin/logout'
      fullPath: '/admin/logout'
      preLoaderRoute: typeof AdminLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/change-password': {
      id: '/admin/change-password'
      path: '/admin/change-password'
      fullPath: '/admin/change-password'
      preLoaderRoute: typeof AdminChangePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/job-boards/': {
      id: '/api/job-boards/'
      path: '/api/job-boards'
      fullPath: '/api/job-boards'
      preLoaderRoute: typeof ApiJobBoardsIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/status': {
      id: '/api/auth/status'
      path: '/api/auth/status'
      fullPath: '/api/auth/status'
      preLoaderRoute: typeof ApiAuthStatusServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/logout': {
      id: '/api/auth/logout'
      path: '/api/auth/logout'
      fullPath: '/api/auth/logout'
      preLoaderRoute: typeof ApiAuthLogoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/login': {
      id: '/api/auth/login'
      path: '/api/auth/login'
      fullPath: '/api/auth/login'
      preLoaderRoute: typeof ApiAuthLoginServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/applications/create': {
      id: '/api/applications/create'
      path: '/api/applications/create'
      fullPath: '/api/applications/create'
      preLoaderRoute: typeof ApiApplicationsCreateServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/analytics/projection': {
      id: '/api/analytics/projection'
      path: '/api/analytics/projection'
      fullPath: '/api/analytics/projection'
      preLoaderRoute: typeof ApiAnalyticsProjectionServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/analytics/dashboard': {
      id: '/api/analytics/dashboard'
      path: '/api/analytics/dashboard'
      fullPath: '/api/analytics/dashboard'
      preLoaderRoute: typeof ApiAnalyticsDashboardServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/users': {
      id: '/api/admin/users'
      path: '/api/admin/users'
      fullPath: '/api/admin/users'
      preLoaderRoute: typeof ApiAdminUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/logout': {
      id: '/api/admin/logout'
      path: '/api/admin/logout'
      fullPath: '/api/admin/logout'
      preLoaderRoute: typeof ApiAdminLogoutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/login': {
      id: '/api/admin/login'
      path: '/api/admin/login'
      fullPath: '/api/admin/login'
      preLoaderRoute: typeof ApiAdminLoginServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/change-password': {
      id: '/api/admin/change-password'
      path: '/api/admin/change-password'
      fullPath: '/api/admin/change-password'
      preLoaderRoute: typeof ApiAdminChangePasswordServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/admin/users/create': {
      id: '/api/admin/users/create'
      path: '/create'
      fullPath: '/api/admin/users/create'
      preLoaderRoute: typeof ApiAdminUsersCreateServerRouteImport
      parentRoute: typeof ApiAdminUsersServerRoute
    }
    '/api/admin/users/$id': {
      id: '/api/admin/users/$id'
      path: '/$id'
      fullPath: '/api/admin/users/$id'
      preLoaderRoute: typeof ApiAdminUsersIdServerRouteImport
      parentRoute: typeof ApiAdminUsersServerRoute
    }
    '/api/admin/users/$id/reset': {
      id: '/api/admin/users/$id/reset'
      path: '/reset'
      fullPath: '/api/admin/users/$id/reset'
      preLoaderRoute: typeof ApiAdminUsersIdResetServerRouteImport
      parentRoute: typeof ApiAdminUsersIdServerRoute
    }
    '/api/admin/users/$id/data-summary': {
      id: '/api/admin/users/$id/data-summary'
      path: '/data-summary'
      fullPath: '/api/admin/users/$id/data-summary'
      preLoaderRoute: typeof ApiAdminUsersIdDataSummaryServerRouteImport
      parentRoute: typeof ApiAdminUsersIdServerRoute
    }
  }
}

interface ApiAdminUsersIdServerRouteChildren {
  ApiAdminUsersIdDataSummaryServerRoute: typeof ApiAdminUsersIdDataSummaryServerRoute
  ApiAdminUsersIdResetServerRoute: typeof ApiAdminUsersIdResetServerRoute
}

const ApiAdminUsersIdServerRouteChildren: ApiAdminUsersIdServerRouteChildren = {
  ApiAdminUsersIdDataSummaryServerRoute: ApiAdminUsersIdDataSummaryServerRoute,
  ApiAdminUsersIdResetServerRoute: ApiAdminUsersIdResetServerRoute,
}

const ApiAdminUsersIdServerRouteWithChildren =
  ApiAdminUsersIdServerRoute._addFileChildren(
    ApiAdminUsersIdServerRouteChildren,
  )

interface ApiAdminUsersServerRouteChildren {
  ApiAdminUsersIdServerRoute: typeof ApiAdminUsersIdServerRouteWithChildren
  ApiAdminUsersCreateServerRoute: typeof ApiAdminUsersCreateServerRoute
}

const ApiAdminUsersServerRouteChildren: ApiAdminUsersServerRouteChildren = {
  ApiAdminUsersIdServerRoute: ApiAdminUsersIdServerRouteWithChildren,
  ApiAdminUsersCreateServerRoute: ApiAdminUsersCreateServerRoute,
}

const ApiAdminUsersServerRouteWithChildren =
  ApiAdminUsersServerRoute._addFileChildren(ApiAdminUsersServerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  JobBoardsRoute: JobBoardsRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  ResumesRoute: ResumesRoute,
  SettingsRoute: SettingsRoute,
  AdminChangePasswordRoute: AdminChangePasswordRoute,
  AdminLogoutRoute: AdminLogoutRoute,
  AdminUsersRoute: AdminUsersRoute,
  ApplicationsNewRoute: ApplicationsNewRoute,
  ApplicationsIndexRoute: ApplicationsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAdminChangePasswordServerRoute: ApiAdminChangePasswordServerRoute,
  ApiAdminLoginServerRoute: ApiAdminLoginServerRoute,
  ApiAdminLogoutServerRoute: ApiAdminLogoutServerRoute,
  ApiAdminUsersServerRoute: ApiAdminUsersServerRouteWithChildren,
  ApiAnalyticsDashboardServerRoute: ApiAnalyticsDashboardServerRoute,
  ApiAnalyticsProjectionServerRoute: ApiAnalyticsProjectionServerRoute,
  ApiApplicationsCreateServerRoute: ApiApplicationsCreateServerRoute,
  ApiAuthLoginServerRoute: ApiAuthLoginServerRoute,
  ApiAuthLogoutServerRoute: ApiAuthLogoutServerRoute,
  ApiAuthStatusServerRoute: ApiAuthStatusServerRoute,
  ApiJobBoardsIndexServerRoute: ApiJobBoardsIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
